from ssl import HAS_NPN
import numpy as np
import matplotlib.pyplot as plt

LEN=50
N=20
powSpec=np.zeros(LEN*N)
powSpecN=np.zeros(LEN*N)
Hsum=np.zeros(LEN*N)

# HWlen=20
# channelHw=np.fft.fft(np.concatenate([np.random.randn(HWlen)+1j*np.random.randn(HWlen),np.zeros(len(powSpecN)-HWlen)]))

# CicLen=1000
# for i in range(CicLen):
TIMEsignal0=0.1*(np.random.randn(LEN)+1j*np.random.randn(LEN))
TIMEsignal0[0]=20+10j
TIMEsignal0[1]=20+10j
SPECsignal0=np.fft.fft(TIMEsignal0)
plt.subplot(2,1,1)
plt.plot(np.real(TIMEsignal0),".-")
plt.plot(np.imag(TIMEsignal0),".-")
plt.plot(np.abs(TIMEsignal0),"--",alpha=0.8,color="gray")
plt.title("Original sampled signal in time domain")
plt.xlabel("time")
plt.subplot(2,1,2)
plt.plot(np.real(SPECsignal0),".-")
plt.plot(np.imag(SPECsignal0),".-")
plt.plot(np.abs(SPECsignal0),"--",alpha=0.8,color="gray")
plt.title("Original sampled signal Spectrum")
plt.xlabel("frequency")
plt.suptitle("Original signal")
plt.show()

SPECsignal_EZP=np.concatenate([SPECsignal0,np.zeros((N-1)*LEN)])
TIMEsignal_EZP=np.fft.ifft(SPECsignal_EZP)
plt.subplot(2,1,1)
plt.plot(np.real(TIMEsignal_EZP),".-")
plt.plot(np.imag(TIMEsignal_EZP),".-")
plt.plot(np.abs(TIMEsignal_EZP),"--",alpha=0.8,color="gray")
plt.title("EZP signal in time domain")
plt.xlabel("time")
plt.subplot(2,1,2)
plt.plot(np.real(SPECsignal_EZP),".-")
plt.plot(np.imag(SPECsignal_EZP),".-")
plt.plot(np.abs(SPECsignal_EZP),"--",alpha=0.8,color="gray")
plt.title("EZP signal Spectrum")
plt.xlabel("frequency")
plt.suptitle("Effects of End-Zero-Padding (EZP)")
plt.show()


SPECsignal_MZP=np.concatenate([SPECsignal0[0:int(LEN/2)],np.zeros((N-1)*LEN),SPECsignal0[int(LEN/2):]])
TIMEsignal_MZP=np.fft.ifft(SPECsignal_MZP)
plt.subplot(2,1,1)
plt.plot(np.real(TIMEsignal_MZP),".-")
plt.plot(np.imag(TIMEsignal_MZP),".-")
plt.plot(np.abs(TIMEsignal_MZP),"--",alpha=0.8,color="gray")
plt.title("MZP signal in time domain")
plt.xlabel("time")
plt.subplot(2,1,2)
plt.plot(np.real(SPECsignal_MZP),".-")
plt.plot(np.imag(SPECsignal_MZP),".-")
plt.plot(np.abs(SPECsignal_MZP),"--",alpha=0.8,color="gray")
plt.title("MZP signal Spectrum")
plt.xlabel("frequency")
plt.suptitle("Effects of Mid-Zero-Padding (MZP)")
plt.show()

SPECsignal_SZP=np.concatenate([np.fft.fftshift(SPECsignal0),np.zeros((N-1)*LEN)])
TIMEsignal_SZP=np.fft.ifft(SPECsignal_SZP)
plt.subplot(2,1,1)
plt.plot(np.real(TIMEsignal_SZP),".-")
plt.plot(np.imag(TIMEsignal_SZP),".-")
plt.plot(np.abs(TIMEsignal_SZP),"--",alpha=0.8,color="gray")
plt.title("SZP signal in time domain")
plt.xlabel("time")
plt.subplot(2,1,2)
plt.plot(np.real(SPECsignal_SZP),".-")
plt.plot(np.imag(SPECsignal_SZP),".-")
plt.plot(np.abs(SPECsignal_SZP),"--",alpha=0.8,color="gray")
plt.title("SZP signal Spectrum")
plt.xlabel("frequency")
plt.suptitle("Effects of End-Zero-Padding (EZP)")
plt.show()


plt.subplot(4,1,1)
plt.plot(np.real(TIMEsignal0),".-")
plt.plot(np.imag(TIMEsignal0),".-")
plt.plot(np.abs(TIMEsignal0),"--",alpha=0.8,color="gray")
plt.title("Original signal")
plt.xlabel("time")
plt.subplot(4,1,2)
plt.plot(np.real(TIMEsignal_EZP),".-")
plt.plot(np.imag(TIMEsignal_EZP),".-")
plt.plot(np.abs(TIMEsignal_EZP),"--",alpha=0.8,color="gray")
plt.title("EZP signal")
plt.xlabel("time")
plt.subplot(4,1,3)
plt.plot(np.real(TIMEsignal_MZP),".-")
plt.plot(np.imag(TIMEsignal_MZP),".-")
plt.plot(np.abs(TIMEsignal_MZP),"--",alpha=0.8,color="gray")
plt.title("MZP siganl")
plt.xlabel("time")
plt.subplot(4,1,4)
plt.plot(np.real(TIMEsignal_SZP),".-")
plt.plot(np.imag(TIMEsignal_SZP),".-")
plt.plot(np.abs(TIMEsignal_SZP),"--",alpha=0.8,color="gray")
plt.title("SZP signal")
plt.xlabel("time")
plt.suptitle("Comparing signals in time domain")
plt.show()

t=np.arange(LEN*N)
plt.plot(t[::N],np.real(TIMEsignal0/N),"o",color="C0",label="real original")
plt.plot(t[::N],np.imag(TIMEsignal0/N),"o",color="C1",label="imag original")
plt.plot(t[::N],np.abs(TIMEsignal0/N),"o",color="gray",label="abs original")
plt.plot(t,np.real(TIMEsignal_EZP),"-",color="C0",label="real EZP")
plt.plot(t,np.imag(TIMEsignal_EZP),"-",color="C1",label="imag EZP")
plt.plot(t,np.abs(TIMEsignal_EZP),"-",color="gray",label="abs EZP")
plt.plot(t,np.real(TIMEsignal_MZP),"--",color="C0",label="real MZP")
plt.plot(t,np.imag(TIMEsignal_MZP),"--",color="C1",label="imag MZP")
plt.plot(t,np.abs(TIMEsignal_MZP),"--",color="gray",label="abs MZP")
plt.title("Overlapping comparassion")
plt.xlabel("time")
plt.legend()
plt.show()